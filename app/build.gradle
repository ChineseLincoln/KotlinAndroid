apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "unreal.org.ktapp"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode getVersionCode(false)
        versionName getVersionName(false)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.mergedFlavor.versionCode = rootProject.getVersionCode(true)
            variant.mergedFlavor.versionName = rootProject.getVersionName(true)
        } else if (variant.buildType.name == 'debug') {
            variant.mergedFlavor.versionCode = rootProject.getVersionCode(false)
            variant.mergedFlavor.versionName = rootProject.getVersionName(false)
        }
        println(variant.buildType.name + "version code is --->" + variant.mergedFlavor.versionCode)
        println(variant.buildType.name + "version name is --->" + variant.mergedFlavor.versionName)
    }

    signingConfigs {
        config {
            keyAlias 'drawthink'
            keyPassword 'drawthink'
            storeFile file('../mykeystore')
            storePassword 'drawthink'
        }
    }

    buildTypes {

        debug{
            signingConfig signingConfigs.config
            applicationIdSuffix ".debug"
        }

        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            shrinkResources false
            //Zip代码压缩优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/rxjava.properties'
    }

    lintOptions {
        abortOnError false
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.dependencies["appcompat-v7"]
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}
repositories {
    mavenCentral()
}
